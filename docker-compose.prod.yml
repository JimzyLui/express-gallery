version: "3"
services:
  express-server:
    image: ${DOCKERHUB_NAME}/${IMAGE_NAME}:${IMAGE_VERSION}
    depends_on:
      - postgres-primary-db
    container_name: ${IMAGE_NAME}
    env_file: .env
    environment:
      ENVIRONMENT: production
      NODE_ENV: production
    ports:
      - "${EXPRESS_HOST_PORT}:${EXPRESS_CONTAINER_PORT}"
    networks:
      - my-app-network
  #Backend api
  server:
    container_name: server
    build: ./
    command: npm run db
    working_dir: /user/src/server
    ports:
      - "5000:5000"
    volumes:
      - ./:/user/src/server
    environment:
      POSTGRES_URI: postgres://test:test@192.168.99.100:5432/interapp
    links:
      - postgres
    depends_on:
      - postgres-primary-db
  postgres-primary-db:
    image: postgres:10.0-alpine
    env_file: .env
    volumes:
      - pg-data-volume:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}"
    networks:
      - my-app-network
  redis-server:
    image: redis:4.0-alpine
    env_file: .env
    volumes:
      - redis-data-volume:/data
    ports:
      - "${REDIS_HOST_PORT}:${REDIS_CONTAINER_PORT}"
    networks:
      - my-app-network
volumes:
  pg-data-volume:
  redis-data-volume:
networks: my-app-network:
